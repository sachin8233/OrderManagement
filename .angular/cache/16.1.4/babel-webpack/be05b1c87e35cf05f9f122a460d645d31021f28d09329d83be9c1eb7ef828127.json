{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport let DragDirective = /*#__PURE__*/(() => {\n  class DragDirective {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n      this.files = new EventEmitter();\n      this.background = \"#eee\";\n    }\n    onDragOver(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.background = \"#999\";\n    }\n    onDragLeave(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.background = \"#eee\";\n    }\n    onDrop(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.background = \"#eee\";\n      let fileHandle = null;\n      const file = evt.dataTransfer.files[0];\n      const url = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(file));\n      fileHandle = {\n        file,\n        url\n      };\n      this.files.emit(fileHandle);\n    }\n  }\n  DragDirective.ɵfac = function DragDirective_Factory(t) {\n    return new (t || DragDirective)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n  };\n  DragDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DragDirective,\n    selectors: [[\"\", \"appDrag\", \"\"]],\n    hostVars: 2,\n    hostBindings: function DragDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dragover\", function DragDirective_dragover_HostBindingHandler($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function DragDirective_dragleave_HostBindingHandler($event) {\n          return ctx.onDragLeave($event);\n        })(\"drop\", function DragDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"background\", ctx.background);\n      }\n    },\n    outputs: {\n      files: \"files\"\n    }\n  });\n  return DragDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}