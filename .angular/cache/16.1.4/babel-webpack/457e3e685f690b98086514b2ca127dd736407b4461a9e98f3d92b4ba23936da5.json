{"ast":null,"code":"import { NgZone } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nfunction BuyProductComponent_tr_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"select\", 17, 18);\n    i0.ɵɵlistener(\"change\", function BuyProductComponent_tr_38_Template_select_change_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const product_r2 = restoredCtx.$implicit;\n      const _r3 = i0.ɵɵreference(7);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onQuantityChanged(_r3.value, product_r2.productId));\n    });\n    i0.ɵɵelementStart(8, \"option\", 19);\n    i0.ɵɵtext(9, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 20);\n    i0.ɵɵtext(11, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 21);\n    i0.ɵɵtext(13, \"3\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r2.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r2.productDiscountedPrice);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.getQuantityForProduct(product_r2.productId));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getCalculatedTotal(product_r2.productId, product_r2.productDiscountedPrice), \" \");\n  }\n}\nexport let BuyProductComponent = /*#__PURE__*/(() => {\n  class BuyProductComponent {\n    constructor(activatedRoute, productService, router, injector) {\n      this.activatedRoute = activatedRoute;\n      this.productService = productService;\n      this.router = router;\n      this.injector = injector;\n      this.isSingleProductCheckout = '';\n      this.productDetails = [];\n      this.orderDetails = {\n        fullName: '',\n        fullAddress: '',\n        contactNumber: '',\n        alternateContactNumber: '',\n        transactionId: '',\n        orderProductQuantityList: []\n      };\n    }\n    ngOnInit() {\n      this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\n      this.isSingleProductCheckout = this.activatedRoute.snapshot.paramMap.get(\"isSingleProductCheckout\");\n      this.productDetails.forEach(x => this.orderDetails.orderProductQuantityList.push({\n        productId: x.productId,\n        quantity: 1\n      }));\n      console.log(this.productDetails);\n      console.log(this.orderDetails);\n    }\n    placeOrder(orderForm) {\n      this.productService.placeOrder(this.orderDetails, this.isSingleProductCheckout).subscribe(resp => {\n        console.log(resp);\n        orderForm.reset();\n        const ngZone = this.injector.get(NgZone);\n        ngZone.run(() => {\n          this.router.navigate([\"/orderConfirm\"]);\n        });\n      }, err => {\n        console.log(err);\n      });\n    }\n    getQuantityForProduct(productId) {\n      const filteredProduct = this.orderDetails.orderProductQuantityList.filter(productQuantity => productQuantity.productId === productId);\n      return filteredProduct[0].quantity;\n    }\n    getCalculatedTotal(productId, productDiscountedPrice) {\n      const filteredProduct = this.orderDetails.orderProductQuantityList.filter(productQuantity => productQuantity.productId === productId);\n      return filteredProduct[0].quantity * productDiscountedPrice;\n    }\n    onQuantityChanged(q, productId) {\n      this.orderDetails.orderProductQuantityList.filter(orderProduct => orderProduct.productId === productId)[0].quantity = q;\n    }\n    getCalculatedGrandTotal() {\n      let grandTotal = 0;\n      this.orderDetails.orderProductQuantityList.forEach(productQuantity => {\n        const price = this.productDetails.filter(product => product.productId === productQuantity.productId)[0].productDiscountedPrice;\n        grandTotal = grandTotal + price * productQuantity.quantity;\n      });\n      return grandTotal;\n    }\n    createTransactionAndPlaceOrder(orderForm) {\n      let amount = this.getCalculatedGrandTotal();\n      this.productService.createTransaction(amount).subscribe(response => {\n        console.log(response);\n        this.openTransactioModal(response, orderForm);\n      }, error => {\n        console.log(error);\n      });\n    }\n    openTransactioModal(response, orderForm) {\n      var options = {\n        order_id: response.orderId,\n        key: response.key,\n        amount: response.amount,\n        currency: response.currency,\n        name: 'Learn programming yourself',\n        description: 'Payment of online shopping',\n        image: 'https://cdn.pixabay.com/photo/2023/01/22/13/46/swans-7736415_640.jpg',\n        handler: response => {\n          if (response != null && response.razorpay_payment_id != null) {\n            this.processResponse(response, orderForm);\n          } else {\n            alert(\"Payment failed..\");\n          }\n        },\n        prefill: {\n          name: 'LPY',\n          email: 'LPY@GMAIL.COM',\n          contact: '90909090'\n        },\n        notes: {\n          address: 'Online Shopping'\n        },\n        theme: {\n          color: '#F37254'\n        }\n      };\n      var razorPayObject = new Razorpay(options);\n      razorPayObject.open();\n    }\n    processResponse(resp, orderForm) {\n      this.orderDetails.transactionId = resp.razorpay_payment_id;\n      this.placeOrder(orderForm);\n    }\n  }\n  BuyProductComponent.ɵfac = function BuyProductComponent_Factory(t) {\n    return new (t || BuyProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n  BuyProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BuyProductComponent,\n    selectors: [[\"app-buy-product\"]],\n    decls: 46,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"p-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"orderForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", \"placeholder\", \"Full name\", \"name\", \"fullName\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Full address\", \"name\", \"fullAddress\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Contact number\", \"name\", \"contactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Alternate contact number\", \"name\", \"alternateContactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"align\", \"right\"], [\"type\", \"submit\", \"mat-stroked-button\", \"\", \"color\", \"primary\"], [1, \"table\"], [1, \"thead\"], [1, \"tbody\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-select\", 3, \"ngModel\", \"change\"], [\"quantity\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"]],\n    template: function BuyProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function BuyProductComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.createTransactionAndPlaceOrder(_r0));\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\", 6)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Full name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.orderDetails.fullName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 6)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Full address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.orderDetails.fullAddress = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 6)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Contact number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.orderDetails.contactNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Alternate contact number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.orderDetails.alternateContactNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"button\", 12);\n        i0.ɵɵtext(24, \"Place Order\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(25, \"div\", 3)(26, \"table\", 13)(27, \"thead\", 14)(28, \"tr\")(29, \"th\");\n        i0.ɵɵtext(30, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\");\n        i0.ɵɵtext(34, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Total\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"tbody\", 15);\n        i0.ɵɵtemplate(38, BuyProductComponent_tr_38_Template, 16, 4, \"tr\", 16);\n        i0.ɵɵelementStart(39, \"tr\");\n        i0.ɵɵelement(40, \"td\")(41, \"td\");\n        i0.ɵɵelementStart(42, \"td\");\n        i0.ɵɵtext(43, \"Total\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"td\");\n        i0.ɵɵtext(45);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullAddress);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.contactNumber);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.alternateContactNumber);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.productDetails);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getCalculatedGrandTotal(), \" \");\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.MatButton, i6.MatFormField, i6.MatLabel, i7.MatInput]\n  });\n  return BuyProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}